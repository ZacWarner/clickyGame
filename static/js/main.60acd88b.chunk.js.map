{"version":3,"sources":["components/nav.js","components/container.js","components/Jumbo/index.js","components/Card/index.js","components/CardDeck.js","components/pages/home.js","components/footer.js","App.js","index.js"],"names":["Nav","props","react_default","a","createElement","className","guess","highScore","score","Container","children","Jumbo","Card","Object","assign","src","image","alt","name","clicked","CardDeck","Main","state","rowOne","rowTwo","rowThree","resetGame","_this","setState","createRow","characters","sort","Math","random","rowOneTemp","rowTwoTemp","rowThreeTemp","i","push","handleImputChange","event","console","log","JSON","stringify","target","check","newScore","alreadyClicked","length","this","_this2","Fragment","nav","components_Jumbo","container","components_CardDeck","map","character","val","components_Card","onClick","key","Component","Footer","App","home","footer","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.60acd88b.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\n\r\nfunction Nav(props) {\r\n    return (\r\n        <nav className=\"navbar fixed-top navbar-light text-white p-0 \">\r\n\r\n            <ul className=\"list-group list-group-horizontal bg-info flex-fill text-center\">\r\n                <li className=\"list-group-item bg-info flex-fill\">\r\n                    <h2>Zac's Clicky Game</h2>\r\n                </li>\r\n                <li className=\"list-group-item bg-info flex-fill\">\r\n                    <h4>{!props.guess ? \"\" : props.guess === \"true\" ? \"Incorrect Guess!\" : \"Correct guess!\"}</h4>\r\n                </li>\r\n                <li className=\"list-group-item bg-info flex-fill\">\r\n                    <h3>\r\n                        HighScore: {props.highScore} | Score: {props.score}\r\n                    </h3>\r\n                </li>\r\n            </ul>\r\n\r\n\r\n        </nav >\r\n    )\r\n}\r\n\r\nexport default Nav;","import React from 'react';\r\n\r\nfunction Container(props) {\r\n    return (\r\n        <div className=\"container mb-4 bg-info pb-3\">{props.children}</div>\r\n    )\r\n}\r\n\r\nexport default Container;","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Jumbo() {\r\n    return (\r\n        <div className=\"jumbotron jumbotron-fluid text-center text-white\">\r\n            <h1 className=\"display-4 text-center m-4\"> Clicky Game!</h1>\r\n            <p className=\"lead\">Click a picture to earn points, but don't click the same one!</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Jumbo;","import React from 'react';\r\nimport \"./style.css\";\r\n\r\nfunction Card(props) {\r\n    return (\r\n        <div className=\"card bg-dark\">\r\n            <img src={props.image} alt={props.name} clicked={props.clicked} className=\"card-img\" {...props} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\n\r\nfunction CardDeck(props) {\r\n    return (\r\n        <div className=\"card-group\">{props.children}</div>\r\n    )\r\n}\r\n\r\nexport default CardDeck;","import React, { Component } from \"react\";\r\nimport Container from '../container';\r\nimport Jumbo from \"../Jumbo\";\r\nimport Card from \"../Card\";\r\nimport CardDeck from \"../CardDeck\";\r\nimport characters from \"../../characters.json\";\r\nimport Nav from \"../nav\";\r\n\r\n\r\n\r\nclass Main extends Component {\r\n    state = {\r\n        rowOne: [],\r\n        rowTwo: [],\r\n        rowThree: [],\r\n        clicked: [],\r\n        guess: \"\",\r\n        name: \"\",\r\n        score: 0,\r\n        highScore: 0\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.createRow();\r\n    };\r\n\r\n    resetGame = () => {\r\n        this.setState({\r\n            name: \"\",\r\n            score: 0,\r\n            clicked: []\r\n        });\r\n        this.createRow();\r\n    };\r\n\r\n\r\n\r\n    createRow = () => {\r\n        characters.sort(() => {\r\n            return 0.5 - Math.random();\r\n        });\r\n        let rowOneTemp = [];\r\n        let rowTwoTemp = [];\r\n        let rowThreeTemp = [];\r\n\r\n        for (let i = 0; i < 4; i++) {\r\n            rowOneTemp.push(characters[i]);\r\n        };\r\n\r\n        for (let i = 4; i < 8; i++) {\r\n            rowTwoTemp.push(characters[i]);\r\n        };\r\n\r\n        for (let i = 8; i < 12; i++) {\r\n            rowThreeTemp.push(characters[i]);\r\n        };\r\n        this.setState({ rowOne: rowOneTemp, rowTwo: rowTwoTemp, rowThree: rowThreeTemp })\r\n    };\r\n\r\n    handleImputChange = event => {\r\n        console.log(\"clicked\");\r\n        const name = JSON.stringify(event.target.name);\r\n        let check = false\r\n        let newScore = this.state.score;\r\n\r\n\r\n        const alreadyClicked = this.state.clicked;\r\n        console.log(alreadyClicked);\r\n        console.log(name);\r\n        if (!alreadyClicked) {\r\n            check = false;\r\n        }\r\n        else {\r\n            for (let i = 0; i < alreadyClicked.length; i++) {\r\n                console.log(alreadyClicked[i])\r\n                if (alreadyClicked[i] === name) {\r\n                    check = true;\r\n                    console.log(\"check\" + i);\r\n                }\r\n\r\n            }\r\n        };\r\n        console.log(check);\r\n\r\n        if (check === true) {\r\n            console.log(\"you lose\");\r\n            this.setState({ guess: \"true\" });\r\n            const highScore = this.state.highScore;\r\n            if (highScore < newScore) {\r\n                this.setState({ highScore: newScore });\r\n            }\r\n            this.resetGame();\r\n        }\r\n        else {\r\n            this.state.clicked.push(name);\r\n            newScore++;\r\n            this.setState({ score: newScore, guess: \"false\" });\r\n            this.createRow();\r\n            console.log(this.state.score);\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Nav guess={this.state.guess} score={this.state.score} highScore={this.state.highScore} />\r\n                <Jumbo />\r\n                <Container>\r\n                    <CardDeck>\r\n                        {this.state.rowOne.map((character, val) =>\r\n                            <Card onClick={this.handleImputChange} image={character.image} name={character.name} key={character.name} />)}\r\n                    </CardDeck>\r\n                    <CardDeck>\r\n                        {this.state.rowTwo.map((character, val) =>\r\n                            <Card onClick={this.handleImputChange} image={character.image} name={character.name} key={character.name} />)}\r\n                    </CardDeck>\r\n                    <CardDeck>\r\n                        {this.state.rowThree.map((character, val) =>\r\n                            <Card onClick={this.handleImputChange} image={character.image} name={character.name} key={character.name} />)}\r\n                    </CardDeck>\r\n                </Container>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default Main;","import React from \"react\";\r\n\r\nfunction Footer() {\r\n    return (\r\n        <nav className=\"navbar navbar-light  p-0 bg-info\">\r\n            <p className=\"navbar-brand m-0 bg-info\" >Created by: Zac Warner</p>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React from 'react';\nimport Nav from './components/nav';\nimport Home from './components/pages/home';\nimport Footer from './components/footer';\n\n\nfunction App() {\n  return (\n    <>\n\n      <Home />\n      <Footer />\n    </>\n  )\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}